prompt: |-
  Evaluation_Guidelines:
  Objective:
    description: >
      You will evaluate N candidate trajectories, each representing a series of nodes in a search tree. Each trajectory contains the following:
      - `step_number`: Depth of the node in the trajectory.
      - `observations`: Observations recorded at each step of the trajectory.
      - `action_output`: Direct action output at each step.
      - `model_output`: Raw model output (LLM).
      - `error`: Any errors encountered (can be None).
      - `previous_steps`: The history of earlier steps, including TaskStep and PlanningStep, with the trajectory of ActionSteps leading to the current state.
    goal: >
      Your goal is to evaluate each trajectory holistically, considering how well it progresses toward solving the user's task. Select the trajectory that most effectively achieves this goal.

  Evaluation_Criteria:
    Progress_Toward_Goal:
      description: >
        Assess how well each trajectory advances the task at hand, considering both the individual node's progress and the overall progression of the entire trajectory.
      key_points:
        - Reward trajectories that demonstrate tangible and meaningful progress toward the goal.
        - Penalize trajectories with weak actions or minimal/no advancement.

    Trajectory_Efficiency:
      description: >
        Evaluate how efficiently each trajectory progresses toward the goal, considering the depth and complexity of the steps.
      key_points:
        - Favor trajectories that achieve significant progress with fewer steps.
        - Consider the overall value-to-depth ratio when comparing trajectories of different lengths.
        - Reward efficient exploration of the search space.

    Loop_Detection:
      description: >
        Detect loops or repetitions within each trajectory, especially those related to previous steps.
      loop_types:
        - Real Loops: Identical nodes (observations, action output, and model output) that do not add value to the trajectory.
        - Benign Repetitions: Similar strategies with variations yielding additional progress.
      key_points:
        - Heavily penalize trajectories with real loops.
        - Slight penalties for benign repetitions if they lead to meaningful improvements.

    Error_and_Stability:
      description: >
        Evaluate the severity of errors encountered in each trajectory and penalize based on their impact on progression.
      error_severity:
        - Fatal/Blocking Errors: Major penalty.
        - Significant Errors: Moderate penalty.
        - Minor/Recoverable Issues: Minor penalty.
      key_points:
        - Penalize unstable or unclear model outputs.
        - Consider how errors affect the overall trajectory's ability to move toward the goal.

    Overall_Trajectory_Quality:
      description: >
        Evaluate the coherence and overall quality of the trajectory.
      key_points:
        - Consider the logical sequence of steps and the exploration-exploitation balance.
        - Evaluate the final node's closeness to achieving the goal.
        - Reward trajectories that make consistent progress and demonstrate coherent planning.

  Scoring_Criteria:
    description: >
      The evaluation score is based on the trajectory's overall performance, considering efficiency, progress, loop detection, error severity, and overall coherence.
    scoring_table:
      - score_range: "9-10"
        description: "Trajectory significantly advances toward the goal, highly efficient, with minimal loops or errors."
      - score_range: "7-8"
        description: "Good progress with minor inefficiencies or small errors."
      - score_range: "5-6"
        description: "Moderate progress, but lacks efficiency or contains some errors."
      - score_range: "3-4"
        description: "Poor progress, inefficient, contains several errors or loops."
      - score_range: "1-2"
        description: "Negligible progress, contains true loops, or multiple errors."
      - score_range: "0"
        description: "Severe issues, such as critical errors, true loops, or no relevance to the goal."

    Final_Output_Format:
      description: >
        Provide your evaluation in the following JSON format. Select the best trajectory and provide a detailed analysis explaining why it is the most promising trajectory.
      output_format:
        json:
          - index: [integer]  # Index of the best trajectory
          - analysis: "Detailed analysis addressing progress, efficiency, reflection usage, loop detection, error severity, and overall trajectory quality."
          - selected_trajectory_dimensions: 
              - dimension_name: "Progress Toward Goal"
                score: [x.xx]
              - dimension_name: "Efficiency"
                score: [x.xx]
              - dimension_name: "Loop Detection"
                score: [x.xx]
              - dimension_name: "Error Severity"
                score: [x.xx]
              - dimension_name: "Coherence and Quality"
                score: [x.xx]
